{"version":3,"file":"static/js/160.7bfd5dcd.chunk.js","mappings":"8SAUMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KACHG,SAAS,0FACTC,QACC,qOACA,gJAEDA,QACC,0OACA,uBAEJC,MAAOL,EAAAA,KACJK,MAAM,+FACNF,SAAS,0FACZG,SAAUN,EAAAA,KAAaG,SAAS,4FAGrBI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZP,iBAAkBA,EAClBc,SAAS,WAAD,wBAAE,WAAMC,GAAN,0FAEAN,GAASO,EAAAA,EAAAA,IAASD,IAFlB,OAGNE,EAAAA,GAAAA,QAAc,4BACdN,EAAOO,YAJD,gDAMND,EAAAA,GAAAA,MAAY,0CANN,yDAAF,mDAAC,KAWX,OACE,kBACEE,UAAWC,EAAAA,EAAAA,KACXN,SAAUH,EAAOU,aACjBC,aAAa,MAHf,WAKE,mBAAOH,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,YAE3B,kBACED,UAAWC,EAAAA,EAAAA,MACXG,KAAK,OACLpB,KAAK,OACLqB,YAAY,gBACZC,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,WACfC,MAAOlB,EAAOI,OAAOZ,OAEtBQ,EAAOmB,QAAQ3B,MAAQQ,EAAOoB,OAAO5B,MACpC,gBAAKgB,UAAWC,EAAAA,EAAAA,MAAhB,SAA4BT,EAAOoB,OAAO5B,OACxC,SAEN,mBAAOgB,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,SAE3B,kBACED,UAAWC,EAAAA,EAAAA,MACXG,KAAK,QACLpB,KAAK,QACLqB,YAAY,QACZC,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,WACfC,MAAOlB,EAAOI,OAAOT,QAEtBK,EAAOmB,QAAQxB,OAASK,EAAOoB,OAAOzB,OACrC,gBAAKa,UAAWC,EAAAA,EAAAA,MAAhB,SAA4BT,EAAOoB,OAAOzB,QACxC,SAEN,mBAAOa,UAAWC,EAAAA,EAAAA,MAAlB,UAA6B,YAE3B,kBACED,UAAWC,EAAAA,EAAAA,MACXG,KAAK,WACLpB,KAAK,WACLqB,YAAY,WACZC,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,WACfC,MAAOlB,EAAOI,OAAOR,WAEtBI,EAAOmB,QAAQvB,UAAYI,EAAOoB,OAAOxB,UACxC,gBAAKY,UAAWC,EAAAA,EAAAA,MAAhB,SAA4BT,EAAOoB,OAAOxB,WACxC,SAEN,mBAAQY,UAAWC,EAAAA,EAAAA,IAASG,KAAK,SAAjC,SAA0C,cAG1C,SAAC,KAAD,MAGL,E,UC/FD,EARiB,WACf,OACE,gBAAKJ,UAAWC,EAAAA,EAAAA,KAAhB,UACE,SAACZ,EAAD,KAGL,C,qBCPD,KAAgB,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,IAAM,0B,qBCAhI,KAAgB,KAAO,mBAAmB,KAAO,mB","sources":["components/AuthForm/RegisterForm.js","page/Register.js","webpack://react-homework-template/./src/components/AuthForm/RegisterForm.module.css?3956","webpack://react-homework-template/./src/page/Page.module.css?b2f0"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operation';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './RegisterForm.module.css';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Обов'язкове поле\")\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІїЇєЄ'_]+(([a-zA-Zа-яА-ЯіІїЇєЄ'\\s])?[a-zA-Zа-яА-ЯіІїЇєЄ']*)*$/,\n      'Неправильний формат імені'\n    )\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІїЇєЄ\\s'_]+(([a-zA-Zа-яА-ЯіІїЇєЄ\\s']*)?[a-zA-Zа-яА-ЯіІїЇєЄ\\s']*)*$/,\n      'Invalid name format'\n    ),\n  email: Yup.string()\n    .email('Невірний формат email')\n    .required(\"Обов'язкове поле\"),\n  password: Yup.string().required(\"Обов'язкове поле\"),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        await dispatch(register(values));\n        toast.success('Registration successful!');\n        formik.resetForm();\n      } catch (error) {\n        toast.error('Registration failed. Please try again.');\n      }\n    },\n  });\n\n  return (\n    <form\n      className={css.form}\n      onSubmit={formik.handleSubmit}\n      autoComplete=\"off\"\n    >\n      <label className={css.label}>\n        Username\n        <input\n          className={css.field}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Rosie Simpson\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        />\n        {formik.touched.name && formik.errors.name ? (\n          <div className={css.error}>{formik.errors.name}</div>\n        ) : null}\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          className={css.field}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div className={css.error}>{formik.errors.email}</div>\n        ) : null}\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          className={css.field}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div className={css.error}>{formik.errors.password}</div>\n        ) : null}\n      </label>\n      <button className={css.but} type=\"submit\">\n        Register\n      </button>\n      <ToastContainer />\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/AuthForm/RegisterForm';\nimport css from './Page.module.css';\nconst Register = () => {\n  return (\n    <div className={css.main}>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__xr1rp\",\"field\":\"RegisterForm_field__uw7Is\",\"label\":\"RegisterForm_label__QlBZq\",\"but\":\"RegisterForm_but__u5Vfs\"};","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"Page_home__oB7FM\",\"main\":\"Page_main__BjSSz\"};"],"names":["validationSchema","Yup","shape","name","required","matches","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","toast","resetForm","className","css","handleSubmit","autoComplete","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors"],"sourceRoot":""}