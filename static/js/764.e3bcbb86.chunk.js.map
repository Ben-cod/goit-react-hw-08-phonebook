{"version":3,"file":"static/js/764.e3bcbb86.chunk.js","mappings":"4MAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAqB,SAAAP,GAAK,OAAIA,EAAMQ,QAAQC,KAAlB,EAE1BC,GAAwBC,EAAAA,EAAAA,IACnC,CAACZ,EAAgBQ,IACjB,SAACN,EAAUW,GACT,OAAOX,EAASW,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cADf,GAG/B,ICfH,GAAgB,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,6B,2DCW1HE,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KACHE,SAAS,0FACTC,QACC,wOACA,gJAEDA,QACC,8OACA,uBAEJC,MAAOJ,EAAAA,KACJE,SAAS,qBACTC,QACC,+EACA,0BAIOE,EAAc,WACzB,IAAMtB,GAAWuB,EAAAA,EAAAA,IAAYzB,GACvB0B,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,4BACE,SAAC,KAAD,CACEC,cAAe,CAAEb,KAAM,GAAIQ,MAAO,IAClCL,iBAAkBA,EAClBW,SA1Be,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBhB,EAAoBe,EAApBf,KAAMQ,EAAcO,EAAdP,MAERS,EAAa,CACjBC,GAH0BH,EAAPG,GAInBlB,KAAAA,EACAQ,MAAAA,GAEsBrB,EAASgC,MAC/B,SAAApB,GAAO,OACLA,EAAQC,KAAKC,gBAAkBD,EAAKC,eACpCF,EAAQS,QAAUA,CAFb,IAKPY,EAAAA,GAAAA,QAAc,gRAEdA,EAAAA,GAAAA,QAAc,kKACdT,GAASU,EAAAA,EAAAA,IAAWJ,IACpBD,IAEH,EAGG,UAKE,UAAC,KAAD,CAAMM,UAAWC,EAAAA,KAAjB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAWC,QAAQ,OAArC,SAA4C,UAG5C,SAAC,KAAD,CACEF,UAAWC,EAAAA,MACXE,KAAK,OACLP,GAAG,OACHlB,KAAK,OACL0B,YAAY,mBAEd,SAAC,KAAD,CAAc1B,KAAK,OAAO2B,UAAU,YAEtC,4BACE,kBAAOL,UAAWC,EAAAA,MAAWC,QAAQ,QAArC,SAA6C,WAG7C,SAAC,KAAD,CACEF,UAAWC,EAAAA,MACXE,KAAK,OACLP,GAAG,QACHlB,KAAK,QACL0B,YAAY,eAEd,SAAC,KAAD,CAAc1B,KAAK,QAAQ2B,UAAU,eAGzC,mBAAQL,UAAWC,EAAAA,OAAYE,KAAK,SAApC,SAA6C,mCAKjD,SAAC,KAAD,MAGL,ECnGD,EAA+B,kCAA/B,EAAmF,qCAAnF,EAAuI,kCAAvI,EAAyL,mCAAzL,EAA6O,oCAA7O,EAAyR,2B,oBCW5QG,EAAc,WACzB,IAAMjB,GAAWC,EAAAA,EAAAA,MACXzB,GAAWuB,EAAAA,EAAAA,IAAYd,GACvBJ,GAAQkB,EAAAA,EAAAA,IAAYnB,GACpBsC,GAAYnB,EAAAA,EAAAA,IAAYrB,GAM9B,OAJAyC,EAAAA,EAAAA,YAAU,WACRnB,EAASoB,EAAAA,GACV,GAAE,CAACpB,KAGF,0BACGkB,IAAa,SAAC,KAAD,IACb1C,EAAS6C,KAAI,YAA0B,IAAvBd,EAAsB,EAAtBA,GAAIV,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,KAC1B,OACE,yBACE,iBAAKsB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAiCvB,KACjC,eAAGsB,UAAWC,EAAd,UAAiC,gBAAIf,SAEvC,mBACEc,UAAWC,EACXE,KAAK,SACLQ,QAAS,kBAAMtB,GAASuB,EAAAA,EAAAA,IAAchB,GAA7B,EAHX,SAIC,4BAVIA,EAgBZ,IAEA1B,IAAS,eAAI8B,UAAWC,EAAf,SAA2B/B,MAG1C,EC/CD,EAA6B,2BAA7B,EAAiE,uB,UCKpD2C,EAAS,WACpB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXjB,GAAQe,EAAAA,EAAAA,IAAYjB,GAK1B,OACE,4BACE,kBAAO6B,UAAWC,KAClB,kBACED,UAAWC,EACXE,KAAK,OACLC,YAAY,wBACZ/B,MAAOA,EACPyC,SAXqB,SAAAC,GACzB1B,GAAS2B,EAAAA,EAAAA,GAAgBD,EAAME,OAAO5C,OACvC,MAaF,ECED,EAlBiB,WACf,IAAML,GAAYoB,EAAAA,EAAAA,IAAYrB,GACxBsB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkB,EAAAA,EAAAA,YAAU,WACRnB,EAASoB,EAAAA,GACV,GAAE,CAACpB,KAGF,4BAAM,YAEJ,SAACwB,EAAD,KACA,SAAC1B,EAAD,KACA,yBAAMnB,GAAa,4BACnB,SAACsC,EAAD,MAGL,C","sources":["Redux/Contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","page/Contantacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filters.value;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"field\":\"ContactForm_field__DAXEv\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","import css from './ContactForm.module.css';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/Contacts/selectors';\nimport { addContact } from 'Redux/Contacts/operation';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"–û–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ–ª–µ\")\n    .matches(\n      /^[a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ']+(([' -][a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ' ])?[a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ']*)*$/,\n      '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —ñ–º–µ–Ω—ñ'\n    )\n    .matches(\n      /^[a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ\\s']+(([' -][a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ\\s']*)?[a-zA-Z–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ\\s']*)*$/,\n      'Invalid name format'\n    ),\n  phone: Yup.string()\n    .required('Phone is required')\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Invalid phone number'\n    ),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, phone, id } = values;\n\n    const newContact = {\n      id,\n      name,\n      phone,\n    };\n    const isContactExists = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.phone === phone\n    );\n    if (isContactExists) {\n      toast.warning('–ö–æ–Ω—Ç–∞–∫—Ç –∑ —Ç–∞–∫–∏–º —ñ–º—è–º –∞–±–æ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∂–µ —ñ—Å–Ω—É—î.');\n    } else {\n      toast.success('–û–ø–µ—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—è —É—Å–ø—ñ—à–Ω–æ');\n      dispatch(addContact(newContact));\n      resetForm();\n    }\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', phone: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <div className={css.container}>\n            <div className={css.form_wrap}>\n              <label className={css.label} htmlFor=\"name\">\n                Name\n              </label>\n              <Field\n                className={css.field}\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Rosie Simpson\"\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </div>\n            <div>\n              <label className={css.label} htmlFor=\"phone\">\n                Phone\n              </label>\n              <Field\n                className={css.field}\n                type=\"text\"\n                id=\"phone\"\n                name=\"phone\"\n                placeholder=\"459-12-56\"\n              />\n              <ErrorMessage name=\"phone\" component=\"div\" />\n            </div>\n          </div>\n          <button className={css.button} type=\"submit\">\n            ‚òéÔ∏è Add contact\n          </button>\n        </Form>\n      </Formik>\n      <ToastContainer />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_card\":\"ContactList_contact_card__zhoue\",\"contact_details\":\"ContactList_contact_details__gGZe5\",\"contact_name\":\"ContactList_contact_name__Jt8ih\",\"contact_phone\":\"ContactList_contact_phone__V0Jkc\",\"contact_button\":\"ContactList_contact_button__vVisM\",\"error\":\"ContactList_error__uCB2f\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\n\nimport { deleteContact, fetchContacts } from 'Redux/Contacts/operation';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'Redux/Contacts/selectors';\nimport { Audio } from 'react-loader-spinner';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const isloading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isloading && <Audio />}\n      {contacts.map(({ id, phone, name }) => {\n        return (\n          <li key={id}>\n            <div className={css.contact_card}>\n              <div className={css.contact_details}>\n                <p className={css.contact_name}>{name}</p>\n                <p className={css.contact_phone}>‚òéÔ∏è {phone}</p>\n              </div>\n              <button\n                className={css.contact_button}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                üöÆ Delete\n              </button>\n            </div>\n          </li>\n        );\n      })}\n\n      {error && <h2 className={css.error}>{error}</h2>}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrap\":\"Filter_filterWrap__xOHoa\",\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nimport { selectStatusFilter } from 'Redux/Contacts/selectors';\nimport { setStatusFilter } from 'Redux/Contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectStatusFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n  return (\n    <div>\n      <label className={css.filterWrap}></label>\n      <input\n        className={css.filter}\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n        value={value}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","import { fetchContacts } from 'Redux/Contacts/operation';\nimport { selectIsLoading } from 'Redux/Contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <main>\n      Contacts\n      <Filter />\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </main>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectStatusFilter","filters","value","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","validationSchema","Yup","shape","required","matches","phone","ContactForm","useSelector","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","newContact","id","some","toast","addContact","className","css","htmlFor","type","placeholder","component","ContactList","isloading","useEffect","fetchContacts","map","onClick","deleteContact","Filter","onChange","event","setStatusFilter","target"],"sourceRoot":""}